{"version":3,"sources":["store/action.ts","interfaces.ts","components/Api.tsx","App.tsx","serviceWorker.ts","store/reducer.ts","index.tsx"],"names":["addContributions","contributions","type","mapDispatchToProps","changeUsername","e","getUserData","username","dispatch","preventDefault","fetch","then","res","json","data","console","log","response","respData","years","map","item","total","sum","reduce","a","b","yearlyContributionsData","er","getRepos","repos","connect","state","loginId","name","email","repositories","following","followers","error","avatar","grabData","profile_url","location","blog","bio","company","props","barData","labels","year","datasets","label","barThickness","backgroundColor","borderWidth","barPercentage","item2","language","prev","curr","polarData","Object","keys","values","stackedData","stack","forks","stargazers_count","className","Form","onSubmit","Group","Input","placeholder","onChange","Button","content","Card","Image","src","Content","Header","extra","Icon","href","target","width","height","options","title","display","text","fontSize","legend","position","scales","xAxes","scaleLabel","labelString","gridLines","yAxes","ticks","suggestedMin","List","Item","index","key","startAngle","Math","PI","tooltips","mode","stacked","beginAtZero","repo","html_url","open_issues","App","Boolean","window","hostname","match","initState","reducer","action","value","login","public_repos","message","avatar_url","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c109a87f.chunk.js","sourcesContent":["import {\r\n  Action1,\r\n  initialState,\r\n  Action3,\r\n  //Action4,\r\n  Action5,\r\n} from '../interfaces';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { ActionCreator } from 'redux';\r\nimport { Action } from 'redux';\r\nimport {\r\n  CHANGE,\r\n  SUBMIT,\r\n  ADD_REPOS,\r\n  //ADD_COMMITS,\r\n  ADD_CONTRIBUTIONS,\r\n  ADD_YEARLY_CONTRIBUTIONS,\r\n} from '../interfaces';\r\nexport const changeUsername: ActionCreator<Action1> = (e) => {\r\n  return {\r\n    type: CHANGE,\r\n    e: e,\r\n  };\r\n};\r\nexport const getUserData = (\r\n  e: any,\r\n  username: string\r\n): ThunkAction<void, initialState, null, Action<string>> => (dispatch) => {\r\n  e.preventDefault();\r\n  try {\r\n    fetch(`https://api.github.com/users/${username}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        dispatch({\r\n          type: SUBMIT,\r\n          e: e,\r\n          data,\r\n        });\r\n        console.log(data);\r\n      });\r\n    fetch(`https://github-contributions-api.now.sh/v1/${username}`)\r\n      .then((response) => response.json())\r\n      .then((respData) => {\r\n        //console.log(respData);\r\n        const contributions = respData.years.map((item: any) => item.total);\r\n        console.log(contributions[0]);\r\n        // const yearContributions = respData.years.map((item: any) => item.year);\r\n        // console.log(yearContributions);\r\n\r\n        const sum = contributions.reduce((a: any, b: any) => {\r\n          return a + b;\r\n        });\r\n        dispatch(addContributions(sum));\r\n        dispatch({\r\n          type: ADD_YEARLY_CONTRIBUTIONS,\r\n          yearlyContributionsData: respData.years,\r\n        });\r\n      });\r\n  } catch (er) {\r\n    console.log(er);\r\n  }\r\n};\r\n\r\nexport const addContributions: ActionCreator<Action5> = (\r\n  contributions: any[]\r\n) => {\r\n  return {\r\n    type: ADD_CONTRIBUTIONS,\r\n    contributions,\r\n  };\r\n};\r\nexport const addRepos: ActionCreator<Action3> = (repos: any[]) => {\r\n  return {\r\n    type: ADD_REPOS,\r\n    repos,\r\n  };\r\n};\r\n\r\nexport const getRepos = (\r\n  username: string\r\n): ThunkAction<void, initialState, null, Action<string>> => (dispatch) => {\r\n  fetch(`https://api.github.com/users/${username}/repos?sort=updated`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      //console.log(data);\r\n      dispatch(addRepos(data));\r\n      // const repoNames = data.map((item: any) => item.name);\r\n      // const array = repoNames;\r\n      // let i: number;\r\n      // for (i = 0; i < array.length; i++) {\r\n      //   dispatch(getCommits(username, array[i], i));\r\n      // }\r\n    });\r\n};\r\n\r\n// export const addCommits: ActionCreator<Action4> = (commits: any[]) => {\r\n//   return {\r\n//     type: ADD_COMMITS,\r\n//     commits,\r\n//   };\r\n// };\r\n\r\n// const arrayOfNum: any[] = [];\r\n// export const getCommits = (\r\n//   username: string,\r\n//   userrepo: string,\r\n//   i: number\r\n// ): ThunkAction<void, initialState, null, Action<string>> => (dispatch) => {\r\n//   fetch(`https://api.github.com/repos/${username}/${userrepo}\r\n// /commits?author=${username}`)\r\n//     .then((res) => res.json())\r\n//     .then((data) => {\r\n//       //console.log(data);\r\n//       //console.log(data.length);\r\n//       arrayOfNum[i] = data.length;\r\n//       //console.log(arrayOfNum);\r\n//       const sum = arrayOfNum.reduce((a, b) => {\r\n//         return a + b;\r\n//       });\r\n//       //console.log(sum);\r\n//       dispatch(addCommits(sum));\r\n//     });\r\n// };\r\n\r\n// fetch(`https://api.github.com/repos/sweta222/\r\n// sweta222.github.io/languages`)\r\n//   .then((res) => res.json())\r\n//   .then((data) => {\r\n//     console.log(data);\r\n//   });\r\n","import { SyntheticEvent } from 'react';\r\nexport interface DispatchProps {\r\n  changeUsername: (e: any) => any;\r\n  getUserData: (e: any, username: string) => any;\r\n  getRepos: (username: string) => any;\r\n}\r\nexport const CHANGE = 'CHANGE';\r\nexport const SUBMIT = 'SUBMIT';\r\nexport const ADD_REPOS = 'ADD_REPOS';\r\n//export const ADD_COMMITS = 'ADD_COMMITS';\r\nexport const ADD_CONTRIBUTIONS = 'ADD_CONTRIBUTIONS';\r\nexport const ADD_YEARLY_CONTRIBUTIONS = 'ADD_YEARLY_CONTRIBUTIONS';\r\n\r\nexport interface Action1 {\r\n  type: typeof CHANGE;\r\n  e: SyntheticEvent;\r\n}\r\nexport interface Action2 {\r\n  type: typeof SUBMIT;\r\n  e: SyntheticEvent;\r\n  data: any;\r\n}\r\nexport interface Action3 {\r\n  type: typeof ADD_REPOS;\r\n  repos: any;\r\n}\r\n// export interface Action4 {\r\n//   type: typeof ADD_COMMITS;\r\n//   commits: any;\r\n// }\r\nexport interface Action5 {\r\n  type: typeof ADD_CONTRIBUTIONS;\r\n  contributions: any;\r\n}\r\nexport interface Action6 {\r\n  type: typeof ADD_YEARLY_CONTRIBUTIONS;\r\n  yearlyContributionsData: any;\r\n}\r\nexport interface initialState {\r\n  loginId: string;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  repositories: number;\r\n  following: number;\r\n  followers: number;\r\n  error: string | null | undefined;\r\n  avatar: string;\r\n  grabData: boolean;\r\n  profile_url: any;\r\n  location: string;\r\n  blog: any;\r\n  repos: any[];\r\n  //commits: any[];\r\n  contributions: any[];\r\n  yearlyContributionsData: any[];\r\n  bio: any;\r\n  company: any;\r\n}\r\nexport type combinedAction = Action1 | Action2 | Action3 | Action5 | Action6;\r\n","import * as React from 'react';\r\nimport { Form, Card, Image, Icon, List } from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreator from '../store/action';\r\nimport { ChangeEvent } from 'react';\r\nimport { appState } from '..';\r\nimport { DispatchProps } from '../interfaces';\r\nimport { Bar, Polar } from 'react-chartjs-2';\r\ntype Prop = appState & DispatchProps;\r\nconst Api = (props: Prop) => {\r\n  const setUserInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    props.changeUsername(e);\r\n  };\r\n  const handlesubmit = (e: any) => {\r\n    props.getUserData(e, props.username);\r\n    props.getRepos(props.username);\r\n  };\r\n  const barData = {\r\n    labels: props.yearlyContributionsData.map((item) => item.year),\r\n    datasets: [\r\n      {\r\n        label: ['contributions per years'],\r\n        barThickness: 45,\r\n        backgroundColor: 'orange',\r\n        borderWidth: 1,\r\n        barPercentage: 2,\r\n        //borderAlign: inner,//for polar\r\n        data: props.yearlyContributionsData.map((item2) => item2.total),\r\n      },\r\n    ],\r\n  };\r\n\r\n  let languagesArray = props.repos.map((item) => item.language);\r\n  let map = languagesArray.reduce((prev, curr) => {\r\n    prev[curr] = (prev[curr] || 0) + 1;\r\n    return prev;\r\n  }, {});\r\n  //console.log(map);\r\n  //console.log(Object.keys(map));\r\n  //console.log(Object.values(map));\r\n  const polarData = {\r\n    labels: Object.keys(map),\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\r\n          'rgba(0, 0, 255, 0.2)',\r\n          'pink',\r\n          'lightgreen',\r\n          'rgba(68, 108, 179, 1)',\r\n          'yellow',\r\n          'lightblue',\r\n          'purple',\r\n          'green',\r\n          'rgba(83, 51, 237, 1)',\r\n          'orange',\r\n          'rgb(238, 130, 238)',\r\n          'rgb(60, 179, 113)',\r\n          'rgb(180, 180, 180)',\r\n          'rgb(180, 180, 180)',\r\n          'rgba(0, 181, 204, 1)',\r\n          'rgba(51, 110, 123, 1)',\r\n          '#B21F00',\r\n          '#323130',\r\n          '#7FFFD4',\r\n          '#7FFF00',\r\n          '#FF7F50',\r\n          '#008B8B',\r\n          '#ADFF2F',\r\n          '#008080',\r\n          '#FF6347',\r\n          '#FFE4B5',\r\n          'rgba(255,255,0,0.3)',\r\n          'hsl(290,60%,70%)',\r\n          'hsla(120,60%,70%,0.3)',\r\n          '#808000',\r\n        ],\r\n        data: Object.values(map),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const arbitraryStackKey = 'stack1';\r\n  const stackedData = {\r\n    labels: props.repos.map((item) => item.name),\r\n    datasets: [\r\n      {\r\n        stack: arbitraryStackKey,\r\n        label: 'Forks',\r\n        backgroundColor: 'lightblue',\r\n        data: props.repos.map((item) => item.forks),\r\n      },\r\n      {\r\n        stack: arbitraryStackKey,\r\n        label: 'Stars',\r\n        backgroundColor: 'pink',\r\n        data: props.repos.map((item) => item.stargazers_count),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">Github User Details</div>\r\n      <div className=\"search\">\r\n        <Form onSubmit={handlesubmit}>\r\n          <Form.Group>\r\n            <Form.Input\r\n              placeholder=\"github username\"\r\n              name=\"name\"\r\n              onChange={setUserInput}\r\n            />\r\n            <Form.Button content=\"search\" />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      {props.grabData ? (\r\n        <div className=\"card\">\r\n          <div className=\"card1\">\r\n            <Card>\r\n              <Image src={props.avatar} />\r\n              <Card.Content>\r\n                <Card.Header>{props.name}</Card.Header>\r\n                <Card.Header>{props.loginId}</Card.Header>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  {props.followers} Followers\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  {props.following} Following\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  {props.repositories} Repos\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  <a href={props.profile_url} target=\"_blank\">\r\n                    link to profile: {props.profile_url}\r\n                  </a>\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  <a href={props.blog} target=\"_blank\">\r\n                    link to blog: {props.blog}\r\n                  </a>\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  <a>{props.location}</a>\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  <a>{props.bio}</a>\r\n                </a>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <a>\r\n                  <Icon name=\"user\" />\r\n                  <a>{props.company}</a>\r\n                </a>\r\n              </Card.Content>\r\n            </Card>\r\n\r\n            <div className=\"card2\">\r\n              <Bar\r\n                data={barData}\r\n                //width={400}\r\n                //height={320}\r\n                width={780}\r\n                height={700}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: 'contributions per year',\r\n                    fontSize: 30,\r\n                  },\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'top',\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Years',\r\n                          fontSize: 20,\r\n                        },\r\n                        position: 'bottom',\r\n                        gridLines: {\r\n                          display: false,\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Contributions',\r\n                          fontSize: 20,\r\n                        },\r\n                        ticks: {\r\n                          suggestedMin: 0,\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"cardC\">\r\n              <List.Item>\r\n                <h2>contributions data</h2>\r\n                {props.yearlyContributionsData.map((item: any, index) => (\r\n                  <li key={index}>\r\n                    <a>\r\n                      {item.year} - {item.total} contributions\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n              </List.Item>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card3\">\r\n            <Polar\r\n              data={polarData}\r\n              width={85}\r\n              height={65}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: 'Languages Used Per Repos',\r\n                  fontSize: 20,\r\n                  position: 'top',\r\n                },\r\n                startAngle: -Math.PI / 4,\r\n                legend: {\r\n                  display: true,\r\n                  position: 'bottom',\r\n                },\r\n              }}\r\n            />\r\n            <div className=\"card4\">\r\n              <Bar\r\n                data={stackedData}\r\n                width={840}\r\n                height={500}\r\n                options={{\r\n                  tooltips: {\r\n                    mode: 'x-axis',\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        stacked: true,\r\n                        // scaleLabel: {\r\n                        //   display: true,\r\n                        //   labelString: 'Repository names',\r\n                        //   fontSize: 20,\r\n                        // },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        // scaleLabel: {\r\n                        //   display: true,\r\n                        //   labelString: 'No.of forks and stars',\r\n                        //   fontSize: 20,\r\n                        // },\r\n                        ticks: {\r\n                          beginAtZero: true,\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"cardR\">\r\n            <ul>\r\n              <h1>Repo details</h1>\r\n              {props.repos.map((repo: any, index) => (\r\n                <li key={index}>\r\n                  <a href={repo.html_url} target=\"_blank\">\r\n                    {repo.name} : {repo.forks} forks , {repo.open_issues}\r\n                    issues , {repo.stargazers_count} stars , {repo.language}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Card.Header>{props.error}</Card.Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: appState) => {\r\n  return {\r\n    loginId: state.loginId,\r\n    name: state.name,\r\n    username: state.username,\r\n    email: state.email,\r\n    repositories: state.repositories,\r\n    following: state.following,\r\n    followers: state.followers,\r\n    error: state.error,\r\n    avatar: state.avatar,\r\n    grabData: state.grabData,\r\n    profile_url: state.profile_url,\r\n    location: state.location,\r\n    blog: state.blog,\r\n    repos: state.repos,\r\n    //commits: state.commits,\r\n    contributions: state.contributions,\r\n    yearlyContributionsData: state.yearlyContributionsData,\r\n    bio: state.bio,\r\n    company: state.company,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeUsername: actionCreator.changeUsername,\r\n  getUserData: actionCreator.getUserData,\r\n  getRepos: actionCreator.getRepos,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Api);\r\n","import * as React from 'react';\nimport Api from './components/Api';\nconst App = () => {\n  return (\n    <div>\n      <Api />\n    </div>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  combinedAction,\r\n  initialState,\r\n  CHANGE,\r\n  SUBMIT,\r\n  ADD_REPOS,\r\n  //ADD_COMMITS,\r\n  ADD_CONTRIBUTIONS,\r\n  ADD_YEARLY_CONTRIBUTIONS,\r\n} from '../interfaces';\r\nconst initState: initialState = {\r\n  loginId: '',\r\n  name: '',\r\n  username: '',\r\n  email: '',\r\n  repositories: 0,\r\n  following: 0,\r\n  followers: 0,\r\n  error: '',\r\n  avatar: '',\r\n  grabData: false,\r\n  profile_url: '',\r\n  location: '',\r\n  blog: '',\r\n  repos: [],\r\n  //commits: [],\r\n  contributions: [],\r\n  yearlyContributionsData: [],\r\n  bio: '',\r\n  company: '',\r\n};\r\nconst reducer = (state = initState, action: combinedAction): initialState => {\r\n  switch (action.type) {\r\n    case CHANGE:\r\n      return {\r\n        ...state,\r\n        username: (action.e.target as HTMLInputElement).value,\r\n      };\r\n    case SUBMIT:\r\n      return {\r\n        ...state,\r\n        loginId: action.data.login,\r\n        name: action.data.name,\r\n        email: action.data.email,\r\n        repositories: action.data.public_repos,\r\n        following: action.data.following,\r\n        followers: action.data.followers,\r\n        error: action.data.message,\r\n        avatar: action.data.avatar_url,\r\n        profile_url: action.data.html_url,\r\n        grabData: true,\r\n        location: action.data.location,\r\n        blog: action.data.blog,\r\n        bio: action.data.bio,\r\n        company: action.data.company,\r\n      };\r\n    case ADD_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.repos,\r\n      };\r\n    // case ADD_COMMITS:\r\n    //   return {\r\n    //     ...state,\r\n    //     commits: action.commits,\r\n    //   };\r\n    case ADD_CONTRIBUTIONS:\r\n      return { ...state, contributions: action.contributions };\r\n    case ADD_YEARLY_CONTRIBUTIONS:\r\n      return {\r\n        ...state,\r\n        yearlyContributionsData: action.yearlyContributionsData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducer';\nimport { combinedAction } from './interfaces';\nimport { ThunkMiddleware } from 'redux-thunk';\n//we can also replace/put initialState in the place of appState bcz the returntype of reducer func is defined same,,so appState=initialState\nexport type appState = ReturnType<typeof reducer>;\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk as ThunkMiddleware<appState, combinedAction>)\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}